{
	"info": {
		"_postman_id": "c8e263ef-5095-4b91-8735-5f4ed6c2ae74",
		"name": "JuiceBoxApi",
		"description": "# ðŸš€ Get started here\n\nWelcomeTest is used to check is the API active or not.\n\n## ðŸ”– **How to use this API**\n\n#### **Step 1: Set Your Environtment**\n\nBy default for environment, you should set `HOST`, `PORT`, and `/api`.\n\n<img src=\"https://content.pstmn.io/ed935319-8928-4ff3-b49d-2e7e1cabf006/aW1hZ2UucG5n\" alt=\"JuiceBox%20Environment\" width=\"1850\" height=\"1053\">\n\nYou may modify the environment as needed.\n\n#### **Step 2: Test Connection**\n\nDocumentation for connection can be viewed in every endpoint.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30631763"
	},
	"item": [
		{
			"name": "AUTH",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 422\", function () {",
									"  pm.expect(pm.response.code).to.equal(422);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist;",
									"    pm.expect(responseData.errors).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Name, email, and password fields in the errors object are non-empty strings\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.errors).to.be.an('object');",
									"    pm.expect(responseData.errors.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
									"    pm.expect(responseData.errors.email).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Email should not be empty\");",
									"    pm.expect(responseData.errors.password).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Password should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is in an acceptable range\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"var template = `",
									"<style type=\"text/css\">",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}",
									"    .tftable tr {background-color:#ffffff;}",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}",
									"    .tftable tr:hover {background-color:#e0ffff;}",
									"</style>",
									"",
									"<table class=\"tftable\" border=\"1\">",
									"    <tr>",
									"        <th>Message</th>",
									"        <th>Exception</th>",
									"        <th>File</th>",
									"        <th>Line</th>",
									"    </tr>",
									"    <tr>",
									"        <td>{{response.message}}</td>",
									"        <td>{{response.exception}}</td>",
									"        <td>{{response.file}}</td>",
									"        <td>{{response.line}}</td>",
									"    </tr>",
									"</table>",
									"`;",
									"",
									"function constructVisualizerPayload() {",
									"    return {response: pm.response.json()}",
									"}",
									"",
									"pm.visualizer.set(template, constructVisualizerPayload());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Your Name",
									"type": "text"
								},
								{
									"key": "email",
									"value": "your_email@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Zxcv1234#$",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "127.0.0.1:8000/api/register",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"register"
							]
						},
						"description": "This endpoint allows you to register a new user by sending a POST request to the specified URL. The request should include the following parameters in the x-www-form-urlencoded request body:\n\n- `name` (text): The name of the user to be registered.\n- `email` (text): The email address of the user.\n- `password` (text): The password for the user account.\n    \n\nThis endpoint will return several response code and message:\n\n- `201`\n    \n\nThis code status means your request is success, and your data successfully created in the database.\n\n``` json\n{\n    \"status\": 201,\n    \"message\": \"Created\",\n    \"data\": {\n        \"user\": {\n            \"name\": \"Your Name\",\n            \"email\": \"your_email@gmail.com\",\n            \"updated_at\": \"2025-03-20T16:35:48.000000Z\",\n            \"created_at\": \"2025-03-20T16:35:48.000000Z\",\n            \"id\": 60\n        }\n    }\n}\n\n ```\n\n- `400`\n    \n\nThis code status means your request not pass the validation rules.\n\n``` json\n{\n    \"status\": 400,\n    \"message\": \"Bad request\",\n    \"data\": {\n        \"name\": [\n            \"The name field is required.\"\n        ],\n        \"email\": [\n            \"The email field is required.\"\n        ],\n        \"password\": [\n            \"The password field is required.\"\n        ]\n    }\n}\nanother example of 400\n{\n    \"status\": 400,\n    \"message\": \"Bad request\",\n    \"data\": {\n        \"email\": [\n            \"The email has already been taken.\"\n        ]\n    }\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "email",
									"value": "your_email@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Zxcv1234#$",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "127.0.0.1:8000/api/login",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"login"
							]
						},
						"description": "This endpoint is used to authenticate and log in a user. The request should be made using the HTTP POST method to the specified URL.\n\n### Request\n\nThe request should include the following parameters in the x-www-form-urlencoded request body:\n\n- `email` (text): The email address of the user.\n- `password` (text): The password for the user's account.\n    \n\n### Response\n\nThe response will be in JSON format and will adhere to the following schema:\n\n- `200`\n    \n\nThis code status indicate your request is success.\n\n``` json\n{\n    \"status\": 200,\n    \"message\": \"OK\",\n    \"data\": {\n        \"user\": {\n            \"id\": 13,\n            \"name\": \"Your Name\",\n            \"email\": \"your_email@example.com\",\n            \"email_verified_at\": null,\n            \"created_at\": \"2025-03-20T08:38:17.000000Z\",\n            \"updated_at\": \"2025-03-20T08:38:17.000000Z\"\n        },\n        \"token\": \"52|Z8wcJrsuKiPgvvFc9JLMSpxGktqgo4DokdaW4n4b568cf741\"\n    }\n}\n\n ```\n\nThe response will contain a `token` which is a string representing the authentication token, and a `id` which is the unique identifier for the authenticated user.\n\n- `400`\n    \n\nThis code status means your request not fulfill the validation rules.\n\n``` json\n{\n    \"status\": 400,\n    \"message\": \"Bad request\",\n    \"data\": {\n        \"email\": [\n            \"The email field is required.\"\n        ],\n        \"password\": [\n            \"The password field is required.\"\n        ]\n    }\n}\n\n ```\n\n- `401`\n    \n\nThis code status indicate your credentials not match / found in database\n\n``` json\n{\n    \"status\": 401,\n    \"message\": \"Please check your credentials\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HOST}}:{{PORT}}/{{API_PATTERN}}/logout",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{API_PATTERN}}",
								"logout"
							]
						},
						"description": "The `POST /logout` endpoint is used to log out the user from the system.\n\n### Response\n\nThe response is in JSON format with a status code of 200. The response body has the following schema:\n\n``` json\n{\n    \"status\": 200,\n    \"message\": \"Logout success\"\n}\n\n ```"
					},
					"response": []
				}
			],
			"description": "Collection for request connected with AUTH feature like `login`, `register`, etc."
		},
		{
			"name": "POSTS",
			"item": [
				{
					"name": "Show All Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.1:8000/api/posts",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"posts"
							]
						},
						"description": "### GET /{{API_PATTERN}}/posts\n\nThis endpoint retrieves a list of posts and already contain pagination\n\n#### Request\n\nNo request body is required for this endpoint.\n\n#### Response\n\nThe response will be in JSON format and will have the following schema:\n\n- `200`\n    \n\nThis code status indicates your request is success. This endpoint will return response like below:\n\n``` json\n{\n    \"status\": 200,\n    \"message\": \"Post fetch successfully\",\n    \"data\": {\n        \"current_page\": 1,\n        \"data\": [\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"title\": \"Updated title\",\n                \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n                \"created_at\": \"2025-03-20T12:52:10.000000Z\",\n                \"updated_at\": \"2025-03-20T13:21:43.000000Z\"\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"title\": \"This is update second\",\n                \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n                \"created_at\": \"2025-03-20T12:53:15.000000Z\",\n                \"updated_at\": \"2025-03-20T13:22:07.000000Z\"\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"title\": \"Lorem ipsum dolor sit amet 4\",\n                \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n                \"created_at\": \"2025-03-20T13:28:46.000000Z\",\n                \"updated_at\": \"2025-03-20T13:28:46.000000Z\"\n            },\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"title\": \"Lorem ipsum dolor sit amet 4\",\n                \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n                \"created_at\": \"2025-03-20T13:30:01.000000Z\",\n                \"updated_at\": \"2025-03-20T13:30:01.000000Z\"\n            },\n            {\n                \"id\": 6,\n                \"user_id\": 1,\n                \"title\": \"Test Post\",\n                \"content\": \"This is a test post content.\",\n                \"created_at\": \"2025-03-20T15:24:28.000000Z\",\n                \"updated_at\": \"2025-03-20T15:24:28.000000Z\"\n            },\n            {\n                \"id\": 7,\n                \"user_id\": 1,\n                \"title\": \"Test Post 2\",\n                \"content\": \"This is a test post content.\",\n                \"created_at\": \"2025-03-20T15:25:25.000000Z\",\n                \"updated_at\": \"2025-03-20T15:25:25.000000Z\"\n            },\n            {\n                \"id\": 8,\n                \"user_id\": 1,\n                \"title\": \"Test Post 23\",\n                \"content\": \"This is a test post content.\",\n                \"created_at\": \"2025-03-20T15:34:02.000000Z\",\n                \"updated_at\": \"2025-03-20T15:34:02.000000Z\"\n            },\n            {\n                \"id\": 9,\n                \"user_id\": 1,\n                \"title\": \"Test Post 23\",\n                \"content\": \"This is a test post content.\",\n                \"created_at\": \"2025-03-20T15:34:27.000000Z\",\n                \"updated_at\": \"2025-03-20T15:34:27.000000Z\"\n            },\n            {\n                \"id\": 10,\n                \"user_id\": 28,\n                \"title\": \"Repellat atque provident repudiandae molestiae perspiciatis.\",\n                \"content\": \"Asperiores unde possimus voluptate. Et omnis nemo qui ut. Laborum a vitae praesentium aspernatur. Et itaque in ipsum fuga repellendus perspiciatis sed.\",\n                \"created_at\": \"2025-03-20T15:37:36.000000Z\",\n                \"updated_at\": \"2025-03-20T15:37:36.000000Z\"\n            },\n            {\n                \"id\": 11,\n                \"user_id\": 29,\n                \"title\": \"Distinctio ipsum nobis quia accusamus.\",\n                \"content\": \"Deleniti ullam cum dolores. Iusto enim voluptate aut nisi dignissimos cumque distinctio. Culpa quas et sit delectus facilis quia. Nesciunt quia est eos sed consectetur corporis.\",\n                \"created_at\": \"2025-03-20T15:37:36.000000Z\",\n                \"updated_at\": \"2025-03-20T15:37:36.000000Z\"\n            }\n        ],\n        \"first_page_url\": \"http://127.0.0.1:8000/api/posts?page=1\",\n        \"from\": 1,\n        \"last_page\": 6,\n        \"last_page_url\": \"http://127.0.0.1:8000/api/posts?page=6\",\n        \"links\": [\n            {\n                \"url\": null,\n                \"label\": \"Â« Previous\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/posts?page=1\",\n                \"label\": \"1\",\n                \"active\": true\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/posts?page=2\",\n                \"label\": \"2\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/posts?page=3\",\n                \"label\": \"3\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/posts?page=4\",\n                \"label\": \"4\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/posts?page=5\",\n                \"label\": \"5\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/posts?page=6\",\n                \"label\": \"6\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/posts?page=2\",\n                \"label\": \"Next Â»\",\n                \"active\": false\n            }\n        ],\n        \"next_page_url\": \"http://127.0.0.1:8000/api/posts?page=2\",\n        \"path\": \"http://127.0.0.1:8000/api/posts\",\n        \"per_page\": 10,\n        \"prev_page_url\": null,\n        \"to\": 10,\n        \"total\": 53\n    }\n}\n\n ```\n\n- `401`\n    \n\nThis code status indicates your request is failed due to authentication problem.\n\n``` json\n{\n    \"status\": 401,\n    \"message\": \"Unauthorized\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Get Post By ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.01:8000/api/posts/id",
							"host": [
								"127",
								"0",
								"0",
								"01"
							],
							"port": "8000",
							"path": [
								"api",
								"posts",
								"id"
							]
						},
						"description": "### Get Post by ID\n\nThis endpoint retrieves a specific post by its ID.\n\n#### Request\n\n- Method: GET\n- URL: `127.0.0.01:8000/api/posts/id`\n    \n\n#### Response\n\nThe response will include the details of the post identified by the provided ID.\n\n- `200`\n    \n\nThis code status indicates your request is success and will return the post.\n\n``` json\n{\n    \"status\": 200,\n    \"message\": \"OK\",\n    \"data\": {\n        \"id\": 1,\n        \"user_id\": 1,\n        \"title\": \"This is update second\",\n        \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n        \"created_at\": \"2025-03-20T12:52:10.000000Z\",\n        \"updated_at\": \"2025-03-20T17:09:07.000000Z\"\n    }\n}\n\n ```\n\n- `401`\n    \n\nThis code status indicates your request is failed due to authentication problem.\n\n``` json\n{\n    \"status\": 401,\n    \"message\": \"Unauthorized\"\n}\n\n ```\n\n- `404`\n    \n\nThis code status indicates data you are requesting is not exist / not found.\n\n``` json\n{\n    \"status\": 404,\n    \"message\": \"Not found\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Add New Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "user_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "title",
									"value": "Lorem ipsum dolor sit amet 4",
									"type": "text"
								},
								{
									"key": "content",
									"value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "127.0.0.1:8000/api/posts",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"posts"
							]
						},
						"description": "### POST /api/posts\n\nThis endpoint allows the client to create a new post.\n\n#### Request Body\n\n- `user_id` (text): The ID of the user creating the post.\n- `title` (text): The title of the post.\n- `content` (text): The content of the post.\n    \n\n#### Response\n\nThe response will be in the form of a JSON object with the following schema:\n\n- `200`\n    \n\n``` json\n{\n    \"status\": 201,\n    \"message\": \"Post created\"\n}\n\n ```\n\n- `400`\n    \n\nThis code status indicates your request not pass the validation process.\n\n``` json\n{\n    \"status\": 400,\n    \"message\": \"Bad request\",\n    \"data\": {\n        \"user_id\": [\n            \"The user id field is required.\"\n        ],\n        \"title\": [\n            \"The title field is required.\"\n        ],\n        \"content\": [\n            \"The content field is required.\"\n        ]\n    }\n}\n\n ```\n\n- `401`\n    \n\nThis code status indicates your request is failed due to authentication problem.\n\n``` json\n{\n    \"status\": 401,\n    \"message\": \"Unauthorized\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Update Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "title",
									"value": "This is update second",
									"type": "text"
								},
								{
									"key": "content",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{HOST}}:{{PORT}}/{{API_PATTERN}}/posts/1",
							"host": [
								"{{HOST}}"
							],
							"port": "{{PORT}}",
							"path": [
								"{{API_PATTERN}}",
								"posts",
								"1"
							]
						},
						"description": "This endpoint makes an HTTP PATCH request to update the post with ID 2. The request body should be in x-www-form-urlencoded format and include the following parameters:\n\n- **title** (text): The updated title of the post.\n- **content** (text): The updated content of the post.\n    \n\nThe response will include the updated details of the post after the patch operation.\n\n- `200`\n    \n\nThis code status indicates your request is success and post updated.\n\n``` json\n{\n    \"status\": 200,\n    \"message\": \"Post updated\"\n}\n ```\n\n- `401`\n    \n\nThis code status indicates your request is failed due to authentication problem.\n\n``` json\n{\n    \"status\": 401,\n    \"message\": \"Unauthorized\"\n}\n\n ```\n\n- 404\n    \n\nThis code status indicates your request is success but data you are requesting is not exist / not found.\n\n``` json\n{\n    \"status\": 404,\n    \"message\": \"Post not found\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Delete Post",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.1:8000/api/posts/2",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"posts",
								"2"
							]
						},
						"description": "### Delete Post\n\nThis endpoint is used to delete a specific post by its ID.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\n- `200`\n    \n\nThis code status indicates your request is success and post deleted.\n\n``` json\n{\n    \"status\": 200,\n    \"message\": \"Post deleted\"\n}\n\n ```\n\n- `401`\n    \n\nThis code status indicates your request is failed due to authentication problem.\n\n``` json\n{\n    \"status\": 401,\n    \"message\": \"Unauthorized\"\n}\n\n ```\n\n- `404`\n    \n\nThis code status indicates your request is success but data you are requesting is not exists / not found\n\n``` json\n{\n    \"status\": 404,\n    \"message\": \"Post not found\"\n}\n\n ```"
					},
					"response": []
				}
			]
		},
		{
			"name": "USER",
			"item": [
				{
					"name": "Get By ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.1:8000/api/users/1",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"users",
								"1"
							]
						},
						"description": "# Retrieve User Details\n\nThis endpoint retrieves the details of a specific user by their ID.\n\n## Request\n\n- Method: GET\n- Endpoint: `{{HOST}}:{{PORT}}/{{API_PATTERN}}/users/50`\n    \n\n### Response\n\nThe response will be a JSON object with the following schema:\n\n- `200`\n    \n\nThis code status indicates your request is success and data you are requesting is exist.\n\n``` json\n{\n    \"status\": 200,\n    \"message\": \"OK\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Ardian Septiadi\",\n        \"email\": \"\",\n        \"email_verified_at\": null,\n        \"created_at\": \"2025-03-20T07:13:14.000000Z\",\n        \"updated_at\": \"2025-03-20T07:13:14.000000Z\"\n    }\n}\n\n ```\n\n- `401`\n    \n\nThis code status indicates your request is failed due to authentication problem.\n\n``` json\n{\n    \"status\": 401,\n    \"message\": \"Unauthorized\"\n}\n\n ```\n\n- `404`\n    \n\nThis code status indicates your request is success but data you are requesting is not exist / not found\n\n``` json\n{\n    \"status\": 404,\n    \"message\": \"Not found\"\n}\n\n ```"
					},
					"response": []
				},
				{
					"name": "Get All User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.1:8000/api/users",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"users"
							]
						},
						"description": "### GET /api/users\n\nThis endpoint retrieves a list of users.\n\n#### Request\n\nNo request body is required for this endpoint.\n\n#### Response\n\nThe response will be in JSON format with the following schema:\n\n- status (number): The status of the response.\n- message (string): Any additional message related to the response.\n    \n\nExample response:\n\n- `200`\n    \n\nThis code status indicates your request is success, and getting all users list include pagination.\n\n``` json\n{\n    \"status\": 200,\n    \"message\": \"OK\",\n    \"data\": {\n        \"current_page\": 1,\n        \"data\": [\n            {\n                \"id\": 1,\n                \"name\": \"Ardian Septiadi\",\n                \"email\": \"\",\n                \"email_verified_at\": null,\n                \"created_at\": \"2025-03-20T07:13:14.000000Z\",\n                \"updated_at\": \"2025-03-20T07:13:14.000000Z\"\n            },\n            {\n                \"id\": 2,\n                \"name\": \"Ardian Septiadi\",\n                \"email\": \"asd\",\n                \"email_verified_at\": null,\n                \"created_at\": \"2025-03-20T07:46:57.000000Z\",\n                \"updated_at\": \"2025-03-20T07:46:57.000000Z\"\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Ardian Septiadi\",\n                \"email\": \"af\",\n                \"email_verified_at\": null,\n                \"created_at\": \"2025-03-20T07:50:34.000000Z\",\n                \"updated_at\": \"2025-03-20T07:50:34.000000Z\"\n            },\n            {\n                \"id\": 4,\n                \"name\": \"Ardian Septiadi\",\n                \"email\": \"wada\",\n                \"email_verified_at\": null,\n                \"created_at\": \"2025-03-20T07:58:08.000000Z\",\n                \"updated_at\": \"2025-03-20T07:58:08.000000Z\"\n            },\n            {\n                \"id\": 5,\n                \"name\": \"Ardian Septiadi\",\n                \"email\": \"zdxx\",\n                \"email_verified_at\": null,\n                \"created_at\": \"2025-03-20T08:03:44.000000Z\",\n                \"updated_at\": \"2025-03-20T08:03:44.000000Z\"\n            },\n            {\n                \"id\": 6,\n                \"name\": \"Ardian Septiadi\",\n                \"email\": \"123132\",\n                \"email_verified_at\": null,\n                \"created_at\": \"2025-03-20T08:10:54.000000Z\",\n                \"updated_at\": \"2025-03-20T08:10:54.000000Z\"\n            },\n            {\n                \"id\": 7,\n                \"name\": \"Ardian Septiadi\",\n                \"email\": \"ad34\",\n                \"email_verified_at\": null,\n                \"created_at\": \"2025-03-20T08:11:25.000000Z\",\n                \"updated_at\": \"2025-03-20T08:11:25.000000Z\"\n            },\n            {\n                \"id\": 8,\n                \"name\": \"Ardian Septiadi\",\n                \"email\": \"ijk\",\n                \"email_verified_at\": null,\n                \"created_at\": \"2025-03-20T08:16:24.000000Z\",\n                \"updated_at\": \"2025-03-20T08:16:24.000000Z\"\n            },\n            {\n                \"id\": 9,\n                \"name\": \"Ardian Septiadi\",\n                \"email\": \"iu\",\n                \"email_verified_at\": null,\n                \"created_at\": \"2025-03-20T08:17:45.000000Z\",\n                \"updated_at\": \"2025-03-20T08:17:45.000000Z\"\n            },\n            {\n                \"id\": 10,\n                \"name\": \"Ardian Septiadi\",\n                \"email\": \"rg\",\n                \"email_verified_at\": null,\n                \"created_at\": \"2025-03-20T08:24:28.000000Z\",\n                \"updated_at\": \"2025-03-20T08:24:28.000000Z\"\n            }\n        ],\n        \"first_page_url\": \"http://127.0.0.1:8000/api/users?page=1\",\n        \"from\": 1,\n        \"last_page\": 6,\n        \"last_page_url\": \"http://127.0.0.1:8000/api/users?page=6\",\n        \"links\": [\n            {\n                \"url\": null,\n                \"label\": \"Â« Previous\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/users?page=1\",\n                \"label\": \"1\",\n                \"active\": true\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/users?page=2\",\n                \"label\": \"2\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/users?page=3\",\n                \"label\": \"3\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/users?page=4\",\n                \"label\": \"4\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/users?page=5\",\n                \"label\": \"5\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/users?page=6\",\n                \"label\": \"6\",\n                \"active\": false\n            },\n            {\n                \"url\": \"http://127.0.0.1:8000/api/users?page=2\",\n                \"label\": \"Next Â»\",\n                \"active\": false\n            }\n        ],\n        \"next_page_url\": \"http://127.0.0.1:8000/api/users?page=2\",\n        \"path\": \"http://127.0.0.1:8000/api/users\",\n        \"per_page\": 10,\n        \"prev_page_url\": null,\n        \"to\": 10,\n        \"total\": 60\n    }\n}\n\n ```\n\n- `401`\n    \n\nThis code status indicates your request is failed due to authentication problem.\n\n``` json\n{\n    \"status\": 401,\n    \"message\": \"Unauthorized\"\n}\n\n ```"
					},
					"response": []
				}
			]
		},
		{
			"name": "WEATHER",
			"item": [
				{
					"name": "Get Current Weather",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "127.0.0.1:8000/api/weather",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"weather"
							]
						},
						"description": "### Retrieve Weather Information\n\nThis endpoint allows you to retrieve weather information. For the weather report is cached for every 15 minutes. If the cache is expired, this endpoint will re-request to weatherapi.com.\n\n#### Request\n\n- Method: GET\n- Endpoint: `127.0.0.1:8000/api/weather`\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n- `200`\n    \n\nThis code status indicates your request is success and getiting weather status, by default for Perth location.\n\n``` json\n{\n    \"status\": 200,\n    \"message\": \"Weater data fetched successfully\",\n    \"data\": {\n        \"location\": {\n            \"name\": \"Perth\",\n            \"region\": \"Western Australia\",\n            \"country\": \"Australia\",\n            \"lat\": -31.9333,\n            \"lon\": 115.8333,\n            \"tz_id\": \"Australia/Perth\",\n            \"localtime_epoch\": 1742490036,\n            \"localtime\": \"2025-03-21 01:00\"\n        },\n        \"current\": {\n            \"last_updated_epoch\": 1742490000,\n            \"last_updated\": \"2025-03-21 01:00\",\n            \"temp_c\": 12.3,\n            \"temp_f\": 54.1,\n            \"is_day\": 0,\n            \"condition\": {\n                \"text\": \"Clear\",\n                \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\n                \"code\": 1000\n            },\n            \"wind_mph\": 7.2,\n            \"wind_kph\": 11.5,\n            \"wind_degree\": 157,\n            \"wind_dir\": \"SSE\",\n            \"pressure_mb\": 1015,\n            \"pressure_in\": 29.97,\n            \"precip_mm\": 0,\n            \"precip_in\": 0,\n            \"humidity\": 88,\n            \"cloud\": 0,\n            \"feelslike_c\": 11.2,\n            \"feelslike_f\": 52.1,\n            \"windchill_c\": 18.4,\n            \"windchill_f\": 65.1,\n            \"heatindex_c\": 18.4,\n            \"heatindex_f\": 65.1,\n            \"dewpoint_c\": 9.2,\n            \"dewpoint_f\": 48.6,\n            \"vis_km\": 10,\n            \"vis_miles\": 6,\n            \"uv\": 0,\n            \"gust_mph\": 13.2,\n            \"gust_kph\": 21.2\n        }\n    }\n}\n\n ```\n\n- `401`\n    \n\nThis code status indicates your request is failed due to authentication problem.\n\n``` json\n{\n    \"status\": 401,\n    \"message\": \"Unauthorized\"\n}\n\n ```"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}